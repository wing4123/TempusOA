package cn.tempus.system.department;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.support.RequestContextUtils;

import cn.tempus.commons.BaseController;

@Controller
@Scope("session")
@RequestMapping("/DepartmentManage")
public class DepartmentController extends BaseController{
	
	@Autowired
	DepartmentService departmentservice;
	
	@RequestMapping("/getDepartmentTree")
	@ResponseBody
	public List<HashMap<String,Object>> getDepartmentTree(){
		List<HashMap<String,Object>> menu = departmentservice.getDepartmentTree();
		return menu;
	}
	
	@RequestMapping("/getParentDepartmentTree")
	@ResponseBody
	public List<HashMap<String,Object>> getParentDepartmentTree(HttpServletRequest request){
		String id = request.getParameter("id");
		List<HashMap<String,Object>> menu = departmentservice.getParentDepartmentTree(id);
		return menu;
	}
	
	@RequestMapping("/SaveDepartment")
	@ResponseBody
	public int SaveDepartment(HttpServletRequest request){
		int result = departmentservice.SaveDepartment(request);
		
		return result;
	}
	
	@RequestMapping("/getDepartmentInfoById")
	@ResponseBody
	public Map<String,Object> getMenuInfoById(HttpServletRequest request){
		String id = request.getParameter("id");
		Map<String,Object> args = new HashMap<String,Object>();
		args.put("#SQL", "select a.fid,a.fname,a.fremark,b.fid fparentid,b.fname fparentname,c.user_id fleaderid,c.user_name fleadername,a.ftype from TB_OA_department a left join TB_OA_department b on b.fid=a.fparentid left join tb_user c on c.user_id=a.fleader where a.fid=#{id}");
		args.put("id", id);
		HashMap<String,Object> departmentinfo = basicService.GetSinglerData(args);
		
		return departmentinfo;
	}
	
	@RequestMapping("/DeleteDepartment")
	@ResponseBody
	public int DeleteDepartment(HttpServletRequest request){
		String id = request.getParameter("id");
		Map<String,Object> args = new HashMap<String,Object>();
		args.put("#SQL", "delete from TB_OA_department where fid=#{id}");
		args.put("id", id);
		int result = basicService.DeleteData(args);
		
		return result;
	}
	
	@RequestMapping("/getDivisionTree")
	@ResponseBody
	public List<HashMap<String,Object>> getDivisionTree(){
		List<HashMap<String,Object>> divisiontree = departmentservice.getDivisionTree();
		return divisiontree;
	}
	
	@RequestMapping("/getParentDivisionTree")
	@ResponseBody
	public List<HashMap<String,Object>> getParentDivisionTree(HttpServletRequest request){
		String id = request.getParameter("id");
		List<HashMap<String,Object>> menu = departmentservice.getParentDivisionTree(id);
		return menu;
	}
	
	@RequestMapping("/SaveDivision")
	@ResponseBody
	public int SaveDivision(HttpServletRequest request){
		int result = departmentservice.SaveDivision(request);
		
		return result;
	}
	
	@RequestMapping("/getDivisionInfoById")
	@ResponseBody
	public Map<String,Object> getDivisionInfoById(HttpServletRequest request){
		String id = request.getParameter("id");
		Map<String,Object> args = new HashMap<String,Object>();
		args.put("#SQL", "select a.fid,a.fnumber,a.fname,a.fremark,b.fid fparentid,b.fname fparentname,c.user_id leaderid,c.user_name leadername,a.flevel from TB_OA_division a left join TB_OA_division b on b.fid=a.fparentid left join tb_user c on c.user_id=a.fleader where a.fid=#{id}");
		args.put("id", id);
		HashMap<String,Object> departmentinfo = basicService.GetSinglerData(args);
		
		return departmentinfo;
	}
	
	@RequestMapping("/DeleteDivision")
	@ResponseBody
	public int DeleteDivision(HttpServletRequest request){
		String id = request.getParameter("id");
		Map<String,Object> args = new HashMap<String,Object>();
		args.put("#SQL", "delete from TB_OA_division where fid=#{id}");
		args.put("id", id);
		int result = basicService.DeleteData(args);
		
		return result;
	}
	
}
