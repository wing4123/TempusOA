package cn.tempus.commons;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.alibaba.fastjson.JSONObject;

import cn.tempus.dao.EasyDao;

@Service
@Transactional(rollbackFor=Exception.class,propagation=Propagation.REQUIRED)
public class FileService {
	
	@Autowired
    private EasyDao basicService;
	
	public void SaveFile(CommonsMultipartFile[] files,HttpServletRequest request) throws IOException{
    	String dir = GlobalCls.GP.getProperty("file.dir");
        String path = new SimpleDateFormat("yyyyMM").format(new Date());
        File filepath = new File(dir+"/"+path);
        if(!filepath.exists()){
        	filepath.mkdirs();
        }
        Map<String,Object> args = new HashMap<String,Object>();
        args.put("#SQL", "insert into TB_OA_fileinfo values (#{id},#{name},#{path},#{size},#{type},#{bid},#{btype},#{user},#{time})");
        args.put("bid", request.getParameter("bid"));
        args.put("btype", request.getParameter("btype"));
        args.put("user", ((JSONObject) JSONObject.toJSON(request.getSession().getAttribute("USER"))).getString("userid"));
        args.put("time", new Date());
        for(CommonsMultipartFile file: files){
        	
        	String id = UUID.randomUUID().toString();
        	args.put("id", id);
        	args.put("name", file.getOriginalFilename());
        	args.put("path", path+"/"+id);
        	args.put("size", (int)file.getSize());
        	args.put("type", StringUtils.substringAfterLast(file.getOriginalFilename(), "."));
        	basicService.InsertData(args);
        	
        	file.transferTo(new File(dir+"/"+path+"/"+id));
        }
	}
	
	/**
	 * @param id 文件id
	 * @return
	 */
	public int DeleteFileById(String id){
		Map<String,Object> args = new HashMap<String,Object>();
		args.put("id", id);
		args.put("#SQL", "select fpath from TB_OA_fileinfo where fid=#{id}");
		String path = basicService.GetFirstValueBySqlWithWhere(args).toString();
		File file = new File(GlobalCls.GP.getProperty("file.dir")+"/"+path);
		if(file.exists()){
			file.delete();
		}
		
		args.put("#SQL", "delete from TB_OA_fileinfo where fid=#{id}");
		int result = basicService.DeleteData(args);
		
		return result;
	}
	
	/**
	 * @param bid 业务id
	 * @param btype 业务类型
	 * @return
	 */
	public int DeleteFileByBid(String bid,String btype){
		Map<String,Object> args = new HashMap<String,Object>();
		args.put("bid", bid);
		args.put("btype", btype);
		args.put("#SQL", "select fpath from TB_OA_fileinfo where fbusinessid=#{bid} and fbusinesstype=#{btype}");
		List<HashMap<String, Object>> paths = basicService.SelectListBySqlWithWhere(args);
		
		for(HashMap<String, Object> path: paths){
			File file = new File(GlobalCls.GP.getProperty("file.dir")+"/"+path.get("FPATH"));
			if(file.exists()){
				file.delete();
			}
		}
		
		args.put("#SQL", "delete from TB_OA_fileinfo where fbusinessid=#{bid} and fbusinesstype=#{btype}");
		int result = basicService.DeleteData(args);
		
		return result;
	}
	
	

}
