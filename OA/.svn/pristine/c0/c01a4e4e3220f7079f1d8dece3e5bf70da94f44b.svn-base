package cn.tempus.commons;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;

import cn.tempus.dao.EasyDao;

public class BaseService {
	
	@Autowired
    public EasyDao basicService;
	
	@Autowired
	public HttpServletRequest request;
	
	@Autowired
	public HttpServletResponse response;
	
	@Autowired
	public HttpSession session;
	
	public Map<String,Object> getDateTableRecord(Map<String,Object> args){
		
		int start = Integer.parseInt(request.getParameter("start"));
		int length = Integer.parseInt(request.getParameter("length"));
		StringBuffer sql = new StringBuffer("select rownum rn,t.* from ("+args.get("#SQL"));
		String orderString="";
		int i=0;
		while(true){
			String col= request.getParameter("order["+i+"][column]"); 			
			if(col==null)break;
			int column=Integer.parseInt(col.toString());
			orderString = ","+request.getParameter("columns["+column+"][data]")+" "+request.getParameter("order["+i+"][dir]"); 
			i++;
		}
		if(!orderString.equals("")){
			sql.append(" order by ").append(orderString.substring(1));
		}
		
		sql.append(") t");
		
		args.put("#SQL", "select count(*) from ( "+sql+")");
		int total = basicService.SelectCountBySqlWithWhere(args);
		sql.insert(0, "select rownum seq,tt.* from (").append(") tt where rn>").append(start).append(" and rn<=").append(start+length);
		args.put("#SQL", sql);
		List<HashMap<String, Object>> data = basicService.SelectListBySqlWithWhere(args);
		Map<String,Object> result = new HashMap<String, Object>();
		result.put("data", data);
		result.put("recordsTotal", total);
		result.put("recordsFiltered", total);
		result.put("draw", request.getParameter("draw"));
		
		return result;
	}
	
	public String getParameter(String key) {
		String parameter = request.getParameter(key);
		
		return parameter;
	}
	
	public String[] getParameterValues(String key) {
		String[] parameters = request.getParameterValues(key+"[]");
		String[] parameter = request.getParameterValues(key);
		
		return parameters==null?parameter:parameters;
	}
	
	
}

